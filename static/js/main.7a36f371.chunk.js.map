{"version":3,"sources":["components/landingpage.js","components/aboutme.js","components/contact.js","components/projects.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Landing","style","width","margin","className","col","src","alt","href","rel","target","aria-hidden","Component","Aboutme","Contact","Projects","Resume","Main","exact","path","component","LandingPage","AboutMe","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"0NAyCeA,E,uKApCb,OACC,yBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,SACnC,kBAAC,OAAD,CAAMC,UAAU,gBACf,kBAAC,OAAD,CAAMC,IAAK,IACV,yBACCC,IAAM,qKACNC,IAAM,SACNH,UAAY,eAEb,yBAAKA,UAAU,eACH,oEACD,6BAEA,gHAIA,yBAAKA,UAAU,gBACf,uBAAGI,KAAK,6CAA6CC,IAAI,sBAAsBC,OAAO,UACtF,uBAAGN,UAAU,wBAAwBO,cAAY,UAIpD,uBAAGH,KAAK,+BAA+BC,IAAI,sBAAsBC,OAAO,UACvE,uBAAGN,UAAU,sBAAsBO,cAAY,kB,GA1BxCC,aCSPC,E,uKAPb,OACC,6BAAK,iD,GAHcD,aCSPE,E,uKAPb,OACC,6BAAK,gD,GAHcF,aCSPG,E,uKAPb,OACC,6BAAK,kD,GAHeH,aCSRI,E,uKAPb,OACC,6BAAK,gD,GAHaJ,aCgBNK,EAVF,kBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWE,IAClC,kBAAC,IAAD,CAAOH,KAAK,WAAWC,UAAWN,IAClC,kBAAC,IAAD,CAAOK,KAAK,YAAYC,UAAWL,IACnC,kBAAC,IAAD,CAAOI,KAAK,UAAUC,UAAWJ,M,OCoBtBO,MA7Bf,WACE,OACE,yBAAKnB,UAAU,oBACf,kBAAC,SAAD,KACI,kBAAC,SAAD,CAAQA,UAAY,eAAcoB,MAAM,QAAQC,QAAM,GACxD,kBAAC,aAAD,KACU,kBAAC,IAAD,CAAMC,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGR,kBAAC,SAAD,CAAQF,MAAM,SACV,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAME,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGR,kBAAC,UAAD,KACI,yBAAKtB,UAAU,iBACf,kBAAC,EAAD,UChBQuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACA,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,6EEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.7a36f371.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl'; \n\nclass Landing extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<div style={{width: '100%', margin: 'auto'}}>\n\t\t\t\t<Grid className=\"landing-grid\">\n\t\t\t\t\t<Cell col={12}>\n\t\t\t\t\t\t<img \n\t\t\t\t\t\t\tsrc = \"https://media-exp1.licdn.com/dms/image/C5103AQGyNlozdQb6-w/profile-displayphoto-shrink_400_400/0?e=1596067200&v=beta&t=ywu2H6nnWLB7cjt9ztP8PxU2F8WJFsk2LCojA_2_C5U\"\n\t\t\t\t\t\t\talt = \"avatar\"\n\t\t\t\t\t\t\tclassName = \"avatar-img\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"banner-text\">\n              \t\t\t\t<h1>Full stack Developer | Data Analyst </h1>\n              \t\t\t<hr/>\n\n              \t\t\t<p>HTML/CSS | React | JavaScript | Python | React Native | NodeJS | SQL | Java |C++</p>\n\n              \t\t\t</div>\n              \t\t\t{/* Linkedin */}\n              \t\t\t<div className=\"social-links\">\n              \t\t\t<a href=\"https://www.linkedin.com/in/pranav-shirke/\" rel=\"noopener noreferrer\" target=\"_blank\">\n              \t\t\t<i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n              \t\t\t</a>\n\n              \t\t\t{/* Github */}\n          \t\t\t\t<a href=\"https://github.com/Pranavs05\" rel=\"noopener noreferrer\" target=\"_blank\">\n            \t\t\t<i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n          \t\t\t\t</a>\n              \t\t\t</div>\n\t\t\t\t\t</Cell> \n\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default Landing","import React, { Component } from 'react';\n\n\nclass Aboutme extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<div><h1>Aboutme Page</h1></div>\n\t\t)\n\t}\n}\n\n\nexport default Aboutme","import React, { Component } from 'react';\n\n\nclass Contact extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<div><h1>ContactPage</h1></div>\n\t\t)\n\t}\n}\n\n\nexport default Contact","import React, { Component } from 'react';\n\n\nclass Projects extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<div><h1>Projects Page</h1></div>\n\t\t)\n\t}\n}\n\n\nexport default Projects","import React, { Component } from 'react';\n\n\nclass Resume extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<div><h1>Resume Page</h1></div>\n\t\t)\n\t}\n}\n\n\nexport default Resume","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport LandingPage from './landingpage';\nimport AboutMe from './aboutme';\nimport Contact from './contact';\nimport Projects from './projects';\nimport Resume from './resume';\n\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={LandingPage} />\n    <Route path=\"/aboutme\" component={AboutMe} />\n    <Route path=\"/contact\" component={Contact} />\n    <Route path=\"/projects\" component={Projects} />\n    <Route path=\"/resume\" component={Resume} />\n  </Switch>\n)\n\nexport default Main;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Layout, Header, Drawer, Navigation, Content } from 'react-mdl';\nimport Main from './components/main';\nimport { Link }  from  'react-router-dom';\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n    <Layout>\n        <Header className = \"header-color\"title=\"Title\" scroll>\n    \t\t<Navigation>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/aboutme\">AboutMe</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"Title\">\n            <Navigation>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/aboutme\">AboutMe</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n            <Main/>\n        </Content>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter }  from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}